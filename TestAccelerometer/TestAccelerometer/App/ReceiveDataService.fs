
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace global

// 
// This code was auto-generated by SlSvcUtil, version 3.7.0.0
// 
namespace System
    // Generated by F# CodeDom
    #nowarn "49" // uppercase argument names
    #nowarn "67" // this type test or downcast will always hold
    #nowarn "66" // this upcast is unnecessary - the types are identical
    #nowarn "58" // possible incorrect indentation..
    #nowarn "57" // do not use create_DelegateEvent
    #nowarn "51" // address-of operator can occur in the code
    #nowarn "1183" // unused 'this' reference
    open System.Runtime.Serialization
    
    exception ReturnExceptioneea437f7554e4e1aa61ab1195985290c of obj
    exception ReturnNoneExceptioneea437f7554e4e1aa61ab1195985290c
    [<AutoOpen>]
    module FuncConvertFinalOverloadeea437f7554e4e1aa61ab1195985290c =
      // This extension member adds to the FuncConvert type and is the last resort member in the method overloading rules. 
      type global.Microsoft.FSharp.Core.FuncConvert with
          /// A utility function to convert function values from tupled to curried form
          static member FuncFromTupled (f:'T -> 'Res) = f
    
    type
        [<System.Diagnostics.DebuggerStepThroughAttribute;
          System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0");
          System.Runtime.Serialization.DataContractAttribute(Name="TupleOfdoubledoubledouble", Namespace="http://schemas.datacontract.org/2004/07/System")>]
        
        (* partial *)TupleOfdoubledoubledouble = class
            inherit obj 
            [<Microsoft.FSharp.Core.DefaultValueAttribute(false)>]
            val mutable m_Item1Field:float
            
            [<Microsoft.FSharp.Core.DefaultValueAttribute(false)>]
            val mutable m_Item2Field:float
            
            [<Microsoft.FSharp.Core.DefaultValueAttribute(false)>]
            val mutable m_Item3Field:float
            
            abstract m_Item1 : float with get,set
            [<System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)>]
            default this.m_Item1
                with get() : float =
                    this.m_Item1Field
                and set(value:float) : unit =
                    this.m_Item1Field <- value
            
            
            abstract m_Item2 : float with get,set
            [<System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)>]
            default this.m_Item2
                with get() : float =
                    this.m_Item2Field
                and set(value:float) : unit =
                    this.m_Item2Field <- value
            
            
            abstract m_Item3 : float with get,set
            [<System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)>]
            default this.m_Item3
                with get() : float =
                    this.m_Item3Field
                and set(value:float) : unit =
                    this.m_Item3Field <- value
        end

namespace global
    // Generated by F# CodeDom
    #nowarn "49" // uppercase argument names
    #nowarn "67" // this type test or downcast will always hold
    #nowarn "66" // this upcast is unnecessary - the types are identical
    #nowarn "58" // possible incorrect indentation..
    #nowarn "57" // do not use create_DelegateEvent
    #nowarn "51" // address-of operator can occur in the code
    #nowarn "1183" // unused 'this' reference
    
    exception ReturnExceptioneea437f7554e4e1aa61ab1195985290c of obj
    exception ReturnNoneExceptioneea437f7554e4e1aa61ab1195985290c
    [<AutoOpen>]
    module FuncConvertFinalOverloadeea437f7554e4e1aa61ab1195985290c =
      // This extension member adds to the FuncConvert type and is the last resort member in the method overloading rules. 
      type global.Microsoft.FSharp.Core.FuncConvert with
          /// A utility function to convert function values from tupled to curried form
          static member FuncFromTupled (f:'T -> 'Res) = f
    
    type
        [<System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0");
          System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="IReceiveData")>]
        IReceiveData = interface
            
            abstract EndReceivePoints : System.IAsyncResult -> unit
            
            [<System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:IReceiveData/ReceivePoints", ReplyAction="urn:IReceiveData/ReceivePointsResponse")>]
            abstract BeginReceivePoints : System.TupleOfdoubledoubledouble[] * System.AsyncCallback * obj -> System.IAsyncResult
            
            abstract EndReceivePoint : System.IAsyncResult -> unit
            
            [<System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:IReceiveData/ReceivePoint", ReplyAction="urn:IReceiveData/ReceivePointResponse")>]
            abstract BeginReceivePoint : System.TupleOfdoubledoubledouble * System.AsyncCallback * obj -> System.IAsyncResult
            
            abstract EndReceiveData : System.IAsyncResult -> unit
            
            [<System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:IReceiveData/ReceiveData", ReplyAction="urn:IReceiveData/ReceiveDataResponse")>]
            abstract BeginReceiveData : System.Byte[] * System.AsyncCallback * obj -> System.IAsyncResult
        end
    
    and
        [<System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")>]
        IReceiveDataChannel = interface
            inherit IReceiveData
            
            inherit System.ServiceModel.IClientChannel
            
        end
    
    and
        [<System.Diagnostics.DebuggerStepThroughAttribute;
          System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")>]
        
        (* partial *)ReceiveDataClient = class
            inherit System.ServiceModel.ClientBase<IReceiveData> 
            [<Microsoft.FSharp.Core.DefaultValueAttribute(false)>]
            val mutable _event_ReceiveDataCompleted : IDelegateEvent<System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs>>;
            [<Microsoft.FSharp.Core.DefaultValueAttribute(false)>]
            val mutable _invoke_ReceiveDataCompleted : obj[] -> unit;
            
            [<Microsoft.FSharp.Core.DefaultValueAttribute(false)>]
            val mutable _event_ReceivePointCompleted : IDelegateEvent<System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs>>;
            [<Microsoft.FSharp.Core.DefaultValueAttribute(false)>]
            val mutable _invoke_ReceivePointCompleted : obj[] -> unit;
            
            [<Microsoft.FSharp.Core.DefaultValueAttribute(false)>]
            val mutable _event_ReceivePointsCompleted : IDelegateEvent<System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs>>;
            [<Microsoft.FSharp.Core.DefaultValueAttribute(false)>]
            val mutable _invoke_ReceivePointsCompleted : obj[] -> unit;
            
            [<Microsoft.FSharp.Core.DefaultValueAttribute(false)>]
            val mutable _event_OpenCompleted : IDelegateEvent<System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs>>;
            [<Microsoft.FSharp.Core.DefaultValueAttribute(false)>]
            val mutable _invoke_OpenCompleted : obj[] -> unit;
            
            [<Microsoft.FSharp.Core.DefaultValueAttribute(false)>]
            val mutable _event_CloseCompleted : IDelegateEvent<System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs>>;
            [<Microsoft.FSharp.Core.DefaultValueAttribute(false)>]
            val mutable _invoke_CloseCompleted : obj[] -> unit;
            [<Microsoft.FSharp.Core.DefaultValueAttribute(false)>]
            val mutable onBeginReceiveDataDelegate:BeginOperationDelegate
            
            [<Microsoft.FSharp.Core.DefaultValueAttribute(false)>]
            val mutable onEndReceiveDataDelegate:EndOperationDelegate
            
            [<Microsoft.FSharp.Core.DefaultValueAttribute(false)>]
            val mutable onReceiveDataCompletedDelegate:System.Threading.SendOrPostCallback
            
            [<Microsoft.FSharp.Core.DefaultValueAttribute(false)>]
            val mutable onBeginReceivePointDelegate:BeginOperationDelegate
            
            [<Microsoft.FSharp.Core.DefaultValueAttribute(false)>]
            val mutable onEndReceivePointDelegate:EndOperationDelegate
            
            [<Microsoft.FSharp.Core.DefaultValueAttribute(false)>]
            val mutable onReceivePointCompletedDelegate:System.Threading.SendOrPostCallback
            
            [<Microsoft.FSharp.Core.DefaultValueAttribute(false)>]
            val mutable onBeginReceivePointsDelegate:BeginOperationDelegate
            
            [<Microsoft.FSharp.Core.DefaultValueAttribute(false)>]
            val mutable onEndReceivePointsDelegate:EndOperationDelegate
            
            [<Microsoft.FSharp.Core.DefaultValueAttribute(false)>]
            val mutable onReceivePointsCompletedDelegate:System.Threading.SendOrPostCallback
            
            [<Microsoft.FSharp.Core.DefaultValueAttribute(false)>]
            val mutable onBeginOpenDelegate:BeginOperationDelegate
            
            [<Microsoft.FSharp.Core.DefaultValueAttribute(false)>]
            val mutable onEndOpenDelegate:EndOperationDelegate
            
            [<Microsoft.FSharp.Core.DefaultValueAttribute(false)>]
            val mutable onOpenCompletedDelegate:System.Threading.SendOrPostCallback
            
            [<Microsoft.FSharp.Core.DefaultValueAttribute(false)>]
            val mutable onBeginCloseDelegate:BeginOperationDelegate
            
            [<Microsoft.FSharp.Core.DefaultValueAttribute(false)>]
            val mutable onEndCloseDelegate:EndOperationDelegate
            
            [<Microsoft.FSharp.Core.DefaultValueAttribute(false)>]
            val mutable onCloseCompletedDelegate:System.Threading.SendOrPostCallback
            [<CLIEvent>]
            member this.ReceiveDataCompleted =
                this._event_ReceiveDataCompleted
            
            [<CLIEvent>]
            member this.ReceivePointCompleted =
                this._event_ReceivePointCompleted
            
            [<CLIEvent>]
            member this.ReceivePointsCompleted =
                this._event_ReceivePointsCompleted
            
            [<CLIEvent>]
            member this.OpenCompleted =
                this._event_OpenCompleted
            
            [<CLIEvent>]
            member this.CloseCompleted =
                this._event_CloseCompleted
            new() as this =
                {
                } then
                        let t_event_CloseCompleted = new DelegateEvent<System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs>>();
                        this._event_CloseCompleted <- t_event_CloseCompleted.Publish;
                        this._invoke_CloseCompleted <- t_event_CloseCompleted.Trigger;
                        let t_event_OpenCompleted = new DelegateEvent<System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs>>();
                        this._event_OpenCompleted <- t_event_OpenCompleted.Publish;
                        this._invoke_OpenCompleted <- t_event_OpenCompleted.Trigger;
                        let t_event_ReceivePointsCompleted = new DelegateEvent<System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs>>();
                        this._event_ReceivePointsCompleted <- t_event_ReceivePointsCompleted.Publish;
                        this._invoke_ReceivePointsCompleted <- t_event_ReceivePointsCompleted.Trigger;
                        let t_event_ReceivePointCompleted = new DelegateEvent<System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs>>();
                        this._event_ReceivePointCompleted <- t_event_ReceivePointCompleted.Publish;
                        this._invoke_ReceivePointCompleted <- t_event_ReceivePointCompleted.Trigger;
                        let t_event_ReceiveDataCompleted = new DelegateEvent<System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs>>();
                        this._event_ReceiveDataCompleted <- t_event_ReceiveDataCompleted.Publish;
                        this._invoke_ReceiveDataCompleted <- t_event_ReceiveDataCompleted.Trigger;
            
            new(endpointConfigurationName:string) as this =
                {
                    inherit System.ServiceModel.ClientBase<IReceiveData>(endpointConfigurationName);
                } then
                        let t_event_CloseCompleted = new DelegateEvent<System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs>>();
                        this._event_CloseCompleted <- t_event_CloseCompleted.Publish;
                        this._invoke_CloseCompleted <- t_event_CloseCompleted.Trigger;
                        let t_event_OpenCompleted = new DelegateEvent<System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs>>();
                        this._event_OpenCompleted <- t_event_OpenCompleted.Publish;
                        this._invoke_OpenCompleted <- t_event_OpenCompleted.Trigger;
                        let t_event_ReceivePointsCompleted = new DelegateEvent<System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs>>();
                        this._event_ReceivePointsCompleted <- t_event_ReceivePointsCompleted.Publish;
                        this._invoke_ReceivePointsCompleted <- t_event_ReceivePointsCompleted.Trigger;
                        let t_event_ReceivePointCompleted = new DelegateEvent<System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs>>();
                        this._event_ReceivePointCompleted <- t_event_ReceivePointCompleted.Publish;
                        this._invoke_ReceivePointCompleted <- t_event_ReceivePointCompleted.Trigger;
                        let t_event_ReceiveDataCompleted = new DelegateEvent<System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs>>();
                        this._event_ReceiveDataCompleted <- t_event_ReceiveDataCompleted.Publish;
                        this._invoke_ReceiveDataCompleted <- t_event_ReceiveDataCompleted.Trigger;
            
            new(endpointConfigurationName:string, remoteAddress:string) as this =
                {
                    inherit System.ServiceModel.ClientBase<IReceiveData>(endpointConfigurationName, remoteAddress);
                } then
                        let t_event_CloseCompleted = new DelegateEvent<System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs>>();
                        this._event_CloseCompleted <- t_event_CloseCompleted.Publish;
                        this._invoke_CloseCompleted <- t_event_CloseCompleted.Trigger;
                        let t_event_OpenCompleted = new DelegateEvent<System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs>>();
                        this._event_OpenCompleted <- t_event_OpenCompleted.Publish;
                        this._invoke_OpenCompleted <- t_event_OpenCompleted.Trigger;
                        let t_event_ReceivePointsCompleted = new DelegateEvent<System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs>>();
                        this._event_ReceivePointsCompleted <- t_event_ReceivePointsCompleted.Publish;
                        this._invoke_ReceivePointsCompleted <- t_event_ReceivePointsCompleted.Trigger;
                        let t_event_ReceivePointCompleted = new DelegateEvent<System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs>>();
                        this._event_ReceivePointCompleted <- t_event_ReceivePointCompleted.Publish;
                        this._invoke_ReceivePointCompleted <- t_event_ReceivePointCompleted.Trigger;
                        let t_event_ReceiveDataCompleted = new DelegateEvent<System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs>>();
                        this._event_ReceiveDataCompleted <- t_event_ReceiveDataCompleted.Publish;
                        this._invoke_ReceiveDataCompleted <- t_event_ReceiveDataCompleted.Trigger;
            
            new(endpointConfigurationName:string, remoteAddress:System.ServiceModel.EndpointAddress) as this =
                {
                    inherit System.ServiceModel.ClientBase<IReceiveData>(endpointConfigurationName, remoteAddress);
                } then
                        let t_event_CloseCompleted = new DelegateEvent<System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs>>();
                        this._event_CloseCompleted <- t_event_CloseCompleted.Publish;
                        this._invoke_CloseCompleted <- t_event_CloseCompleted.Trigger;
                        let t_event_OpenCompleted = new DelegateEvent<System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs>>();
                        this._event_OpenCompleted <- t_event_OpenCompleted.Publish;
                        this._invoke_OpenCompleted <- t_event_OpenCompleted.Trigger;
                        let t_event_ReceivePointsCompleted = new DelegateEvent<System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs>>();
                        this._event_ReceivePointsCompleted <- t_event_ReceivePointsCompleted.Publish;
                        this._invoke_ReceivePointsCompleted <- t_event_ReceivePointsCompleted.Trigger;
                        let t_event_ReceivePointCompleted = new DelegateEvent<System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs>>();
                        this._event_ReceivePointCompleted <- t_event_ReceivePointCompleted.Publish;
                        this._invoke_ReceivePointCompleted <- t_event_ReceivePointCompleted.Trigger;
                        let t_event_ReceiveDataCompleted = new DelegateEvent<System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs>>();
                        this._event_ReceiveDataCompleted <- t_event_ReceiveDataCompleted.Publish;
                        this._invoke_ReceiveDataCompleted <- t_event_ReceiveDataCompleted.Trigger;
            
            new(binding:System.ServiceModel.Channels.Binding, remoteAddress:System.ServiceModel.EndpointAddress) as this =
                {
                    inherit System.ServiceModel.ClientBase<IReceiveData>(binding, remoteAddress);
                } then
                        let t_event_CloseCompleted = new DelegateEvent<System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs>>();
                        this._event_CloseCompleted <- t_event_CloseCompleted.Publish;
                        this._invoke_CloseCompleted <- t_event_CloseCompleted.Trigger;
                        let t_event_OpenCompleted = new DelegateEvent<System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs>>();
                        this._event_OpenCompleted <- t_event_OpenCompleted.Publish;
                        this._invoke_OpenCompleted <- t_event_OpenCompleted.Trigger;
                        let t_event_ReceivePointsCompleted = new DelegateEvent<System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs>>();
                        this._event_ReceivePointsCompleted <- t_event_ReceivePointsCompleted.Publish;
                        this._invoke_ReceivePointsCompleted <- t_event_ReceivePointsCompleted.Trigger;
                        let t_event_ReceivePointCompleted = new DelegateEvent<System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs>>();
                        this._event_ReceivePointCompleted <- t_event_ReceivePointCompleted.Publish;
                        this._invoke_ReceivePointCompleted <- t_event_ReceivePointCompleted.Trigger;
                        let t_event_ReceiveDataCompleted = new DelegateEvent<System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs>>();
                        this._event_ReceiveDataCompleted <- t_event_ReceiveDataCompleted.Publish;
                        this._invoke_ReceiveDataCompleted <- t_event_ReceiveDataCompleted.Trigger;
            
            abstract CookieContainer : System.Net.CookieContainer with get,set
            default this.CookieContainer
                with get() : System.Net.CookieContainer =
                    try
                        let mutable (httpCookieContainerManager:System.ServiceModel.Channels.IHttpCookieContainerManager) = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>()
                        if (not (System.Object.ReferenceEquals(httpCookieContainerManager, (Unchecked.defaultof<_>)))) then
                            raise (ReturnExceptioneea437f7554e4e1aa61ab1195985290c(((httpCookieContainerManager.CookieContainer :> obj) :?> System.Net.CookieContainer)))
                        else
                            raise (ReturnExceptioneea437f7554e4e1aa61ab1195985290c((((Unchecked.defaultof<_>) :> obj) :?> System.Net.CookieContainer)))
                        failwith "Code branch didn't return any value!";
                    with
                        | ReturnExceptioneea437f7554e4e1aa61ab1195985290c v -> (v :?> System.Net.CookieContainer)
                and set(value:System.Net.CookieContainer) : unit =
                    let mutable (httpCookieContainerManager:System.ServiceModel.Channels.IHttpCookieContainerManager) = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>()
                    if (not (System.Object.ReferenceEquals(httpCookieContainerManager, (Unchecked.defaultof<_>)))) then
                        httpCookieContainerManager.CookieContainer <- value
                    else
                        raise (new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpCookieContainerBindingElement."))
            override this.CreateChannel  () =
                ((new ReceiveDataClient_ReceiveDataClientChannel(this) :> obj) :?> IReceiveData)
            
            abstract CloseAsync : obj -> unit
            default this.CloseAsync  (userState:obj) =
                let mutable userState = userState
                if (System.Object.ReferenceEquals(this.onBeginCloseDelegate, (Unchecked.defaultof<_>))) then
                    this.onBeginCloseDelegate <- new BeginOperationDelegate(FuncConvert.FuncFromTupled this.OnBeginClose)
                if (System.Object.ReferenceEquals(this.onEndCloseDelegate, (Unchecked.defaultof<_>))) then
                    this.onEndCloseDelegate <- new EndOperationDelegate(FuncConvert.FuncFromTupled this.OnEndClose)
                if (System.Object.ReferenceEquals(this.onCloseCompletedDelegate, (Unchecked.defaultof<_>))) then
                    this.onCloseCompletedDelegate <- new System.Threading.SendOrPostCallback(FuncConvert.FuncFromTupled this.OnCloseCompleted)
                base.InvokeAsync(this.onBeginCloseDelegate, (Unchecked.defaultof<_>), this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState) |> ignore
            
            abstract CloseAsync : unit -> unit
            default this.CloseAsync  () =
                this.CloseAsync((Unchecked.defaultof<_>)) |> ignore
            
            abstract OnCloseCompleted : obj -> unit
            default this.OnCloseCompleted  (state:obj) =
                let mutable state = state
                if (not (System.Object.ReferenceEquals(let __e = this in __e.CloseCompleted, (Unchecked.defaultof<_>)))) then
                    let mutable (e:InvokeAsyncCompletedEventArgs) = ((state :> obj) :?> InvokeAsyncCompletedEventArgs)
                    this._invoke_CloseCompleted [|  box (this);  box (new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState)) |] |> ignore
            
            abstract OnEndClose : System.IAsyncResult -> obj[]
            default this.OnEndClose  (result:System.IAsyncResult) =
                let mutable result = result
                ((this :> obj) :?> System.ServiceModel.ICommunicationObject).EndClose(result) |> ignore
                (((Unchecked.defaultof<_>) :> obj) :?> obj[])
            
            abstract OnBeginClose : obj[] * System.AsyncCallback * obj -> System.IAsyncResult
            default this.OnBeginClose  (inValues:obj[], callback:System.AsyncCallback, asyncState:obj) =
                let mutable inValues = inValues
                let mutable callback = callback
                let mutable asyncState = asyncState
                ((((this :> obj) :?> System.ServiceModel.ICommunicationObject).BeginClose(callback, asyncState) :> obj) :?> System.IAsyncResult)
            
            abstract OpenAsync : obj -> unit
            default this.OpenAsync  (userState:obj) =
                let mutable userState = userState
                if (System.Object.ReferenceEquals(this.onBeginOpenDelegate, (Unchecked.defaultof<_>))) then
                    this.onBeginOpenDelegate <- new BeginOperationDelegate(FuncConvert.FuncFromTupled this.OnBeginOpen)
                if (System.Object.ReferenceEquals(this.onEndOpenDelegate, (Unchecked.defaultof<_>))) then
                    this.onEndOpenDelegate <- new EndOperationDelegate(FuncConvert.FuncFromTupled this.OnEndOpen)
                if (System.Object.ReferenceEquals(this.onOpenCompletedDelegate, (Unchecked.defaultof<_>))) then
                    this.onOpenCompletedDelegate <- new System.Threading.SendOrPostCallback(FuncConvert.FuncFromTupled this.OnOpenCompleted)
                base.InvokeAsync(this.onBeginOpenDelegate, (Unchecked.defaultof<_>), this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState) |> ignore
            
            abstract OpenAsync : unit -> unit
            default this.OpenAsync  () =
                this.OpenAsync((Unchecked.defaultof<_>)) |> ignore
            
            abstract OnOpenCompleted : obj -> unit
            default this.OnOpenCompleted  (state:obj) =
                let mutable state = state
                if (not (System.Object.ReferenceEquals(let __e = this in __e.OpenCompleted, (Unchecked.defaultof<_>)))) then
                    let mutable (e:InvokeAsyncCompletedEventArgs) = ((state :> obj) :?> InvokeAsyncCompletedEventArgs)
                    this._invoke_OpenCompleted [|  box (this);  box (new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState)) |] |> ignore
            
            abstract OnEndOpen : System.IAsyncResult -> obj[]
            default this.OnEndOpen  (result:System.IAsyncResult) =
                let mutable result = result
                ((this :> obj) :?> System.ServiceModel.ICommunicationObject).EndOpen(result) |> ignore
                (((Unchecked.defaultof<_>) :> obj) :?> obj[])
            
            abstract OnBeginOpen : obj[] * System.AsyncCallback * obj -> System.IAsyncResult
            default this.OnBeginOpen  (inValues:obj[], callback:System.AsyncCallback, asyncState:obj) =
                let mutable inValues = inValues
                let mutable callback = callback
                let mutable asyncState = asyncState
                ((((this :> obj) :?> System.ServiceModel.ICommunicationObject).BeginOpen(callback, asyncState) :> obj) :?> System.IAsyncResult)
            
            abstract ReceivePointsAsync : System.TupleOfdoubledoubledouble[] * obj -> unit
            default this.ReceivePointsAsync  (data:System.TupleOfdoubledoubledouble[], userState:obj) =
                let mutable data = data
                let mutable userState = userState
                if (System.Object.ReferenceEquals(this.onBeginReceivePointsDelegate, (Unchecked.defaultof<_>))) then
                    this.onBeginReceivePointsDelegate <- new BeginOperationDelegate(FuncConvert.FuncFromTupled this.OnBeginReceivePoints)
                if (System.Object.ReferenceEquals(this.onEndReceivePointsDelegate, (Unchecked.defaultof<_>))) then
                    this.onEndReceivePointsDelegate <- new EndOperationDelegate(FuncConvert.FuncFromTupled this.OnEndReceivePoints)
                if (System.Object.ReferenceEquals(this.onReceivePointsCompletedDelegate, (Unchecked.defaultof<_>))) then
                    this.onReceivePointsCompletedDelegate <- new System.Threading.SendOrPostCallback(FuncConvert.FuncFromTupled this.OnReceivePointsCompleted)
                base.InvokeAsync(this.onBeginReceivePointsDelegate, ([| data |] : obj[]), this.onEndReceivePointsDelegate, this.onReceivePointsCompletedDelegate, userState) |> ignore
            
            abstract ReceivePointsAsync : System.TupleOfdoubledoubledouble[] -> unit
            default this.ReceivePointsAsync  (data:System.TupleOfdoubledoubledouble[]) =
                let mutable data = data
                this.ReceivePointsAsync(data, (Unchecked.defaultof<_>)) |> ignore
            
            abstract OnReceivePointsCompleted : obj -> unit
            default this.OnReceivePointsCompleted  (state:obj) =
                let mutable state = state
                if (not (System.Object.ReferenceEquals(let __e = this in __e.ReceivePointsCompleted, (Unchecked.defaultof<_>)))) then
                    let mutable (e:InvokeAsyncCompletedEventArgs) = ((state :> obj) :?> InvokeAsyncCompletedEventArgs)
                    this._invoke_ReceivePointsCompleted [|  box (this);  box (new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState)) |] |> ignore
            
            abstract OnEndReceivePoints : System.IAsyncResult -> obj[]
            default this.OnEndReceivePoints  (result:System.IAsyncResult) =
                let mutable result = result
                ((this :> obj) :?> IReceiveData).EndReceivePoints(result) |> ignore
                (((Unchecked.defaultof<_>) :> obj) :?> obj[])
            
            abstract OnBeginReceivePoints : obj[] * System.AsyncCallback * obj -> System.IAsyncResult
            default this.OnBeginReceivePoints  (inValues:obj[], callback:System.AsyncCallback, asyncState:obj) =
                let mutable inValues = inValues
                let mutable callback = callback
                let mutable asyncState = asyncState
                let mutable (data:System.TupleOfdoubledoubledouble[]) = ((inValues.[0] :> obj) :?> System.TupleOfdoubledoubledouble[])
                ((((this :> obj) :?> IReceiveData).BeginReceivePoints(data, callback, asyncState) :> obj) :?> System.IAsyncResult)
            
            abstract ReceivePointAsync : System.TupleOfdoubledoubledouble * obj -> unit
            default this.ReceivePointAsync  (data:System.TupleOfdoubledoubledouble, userState:obj) =
                let mutable data = data
                let mutable userState = userState
                if (System.Object.ReferenceEquals(this.onBeginReceivePointDelegate, (Unchecked.defaultof<_>))) then
                    this.onBeginReceivePointDelegate <- new BeginOperationDelegate(FuncConvert.FuncFromTupled this.OnBeginReceivePoint)
                if (System.Object.ReferenceEquals(this.onEndReceivePointDelegate, (Unchecked.defaultof<_>))) then
                    this.onEndReceivePointDelegate <- new EndOperationDelegate(FuncConvert.FuncFromTupled this.OnEndReceivePoint)
                if (System.Object.ReferenceEquals(this.onReceivePointCompletedDelegate, (Unchecked.defaultof<_>))) then
                    this.onReceivePointCompletedDelegate <- new System.Threading.SendOrPostCallback(FuncConvert.FuncFromTupled this.OnReceivePointCompleted)
                base.InvokeAsync(this.onBeginReceivePointDelegate, ([| data |] : obj[]), this.onEndReceivePointDelegate, this.onReceivePointCompletedDelegate, userState) |> ignore
            
            abstract ReceivePointAsync : System.TupleOfdoubledoubledouble -> unit
            default this.ReceivePointAsync  (data:System.TupleOfdoubledoubledouble) =
                let mutable data = data
                this.ReceivePointAsync(data, (Unchecked.defaultof<_>)) |> ignore
            
            abstract OnReceivePointCompleted : obj -> unit
            default this.OnReceivePointCompleted  (state:obj) =
                let mutable state = state
                if (not (System.Object.ReferenceEquals(let __e = this in __e.ReceivePointCompleted, (Unchecked.defaultof<_>)))) then
                    let mutable (e:InvokeAsyncCompletedEventArgs) = ((state :> obj) :?> InvokeAsyncCompletedEventArgs)
                    this._invoke_ReceivePointCompleted [|  box (this);  box (new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState)) |] |> ignore
            
            abstract OnEndReceivePoint : System.IAsyncResult -> obj[]
            default this.OnEndReceivePoint  (result:System.IAsyncResult) =
                let mutable result = result
                ((this :> obj) :?> IReceiveData).EndReceivePoint(result) |> ignore
                (((Unchecked.defaultof<_>) :> obj) :?> obj[])
            
            abstract OnBeginReceivePoint : obj[] * System.AsyncCallback * obj -> System.IAsyncResult
            default this.OnBeginReceivePoint  (inValues:obj[], callback:System.AsyncCallback, asyncState:obj) =
                let mutable inValues = inValues
                let mutable callback = callback
                let mutable asyncState = asyncState
                let mutable (data:System.TupleOfdoubledoubledouble) = ((inValues.[0] :> obj) :?> System.TupleOfdoubledoubledouble)
                ((((this :> obj) :?> IReceiveData).BeginReceivePoint(data, callback, asyncState) :> obj) :?> System.IAsyncResult)
            
            abstract ReceiveDataAsync : System.Byte[] * obj -> unit
            default this.ReceiveDataAsync  (data:System.Byte[], userState:obj) =
                let mutable data = data
                let mutable userState = userState
                if (System.Object.ReferenceEquals(this.onBeginReceiveDataDelegate, (Unchecked.defaultof<_>))) then
                    this.onBeginReceiveDataDelegate <- new BeginOperationDelegate(FuncConvert.FuncFromTupled this.OnBeginReceiveData)
                if (System.Object.ReferenceEquals(this.onEndReceiveDataDelegate, (Unchecked.defaultof<_>))) then
                    this.onEndReceiveDataDelegate <- new EndOperationDelegate(FuncConvert.FuncFromTupled this.OnEndReceiveData)
                if (System.Object.ReferenceEquals(this.onReceiveDataCompletedDelegate, (Unchecked.defaultof<_>))) then
                    this.onReceiveDataCompletedDelegate <- new System.Threading.SendOrPostCallback(FuncConvert.FuncFromTupled this.OnReceiveDataCompleted)
                base.InvokeAsync(this.onBeginReceiveDataDelegate, ([| data |] : obj[]), this.onEndReceiveDataDelegate, this.onReceiveDataCompletedDelegate, userState) |> ignore
            
            abstract ReceiveDataAsync : System.Byte[] -> unit
            default this.ReceiveDataAsync  (data:System.Byte[]) =
                let mutable data = data
                this.ReceiveDataAsync(data, (Unchecked.defaultof<_>)) |> ignore
            
            abstract OnReceiveDataCompleted : obj -> unit
            default this.OnReceiveDataCompleted  (state:obj) =
                let mutable state = state
                if (not (System.Object.ReferenceEquals(let __e = this in __e.ReceiveDataCompleted, (Unchecked.defaultof<_>)))) then
                    let mutable (e:InvokeAsyncCompletedEventArgs) = ((state :> obj) :?> InvokeAsyncCompletedEventArgs)
                    this._invoke_ReceiveDataCompleted [|  box (this);  box (new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState)) |] |> ignore
            
            abstract OnEndReceiveData : System.IAsyncResult -> obj[]
            default this.OnEndReceiveData  (result:System.IAsyncResult) =
                let mutable result = result
                ((this :> obj) :?> IReceiveData).EndReceiveData(result) |> ignore
                (((Unchecked.defaultof<_>) :> obj) :?> obj[])
            
            abstract OnBeginReceiveData : obj[] * System.AsyncCallback * obj -> System.IAsyncResult
            default this.OnBeginReceiveData  (inValues:obj[], callback:System.AsyncCallback, asyncState:obj) =
                let mutable inValues = inValues
                let mutable callback = callback
                let mutable asyncState = asyncState
                let mutable (data:System.Byte[]) = ((inValues.[0] :> obj) :?> System.Byte[])
                ((((this :> obj) :?> IReceiveData).BeginReceiveData(data, callback, asyncState) :> obj) :?> System.IAsyncResult)
            interface IReceiveData with
                [<System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>]
                member this.EndReceivePoints  (result:System.IAsyncResult) =
                    let mutable result = result
                    base.Channel.EndReceivePoints(result) |> ignore
                
                [<System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>]
                member this.BeginReceivePoints  (data:System.TupleOfdoubledoubledouble[], callback:System.AsyncCallback, asyncState:obj) =
                    let mutable data = data
                    let mutable callback = callback
                    let mutable asyncState = asyncState
                    ((base.Channel.BeginReceivePoints(data, callback, asyncState) :> obj) :?> System.IAsyncResult)
                
                [<System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>]
                member this.EndReceivePoint  (result:System.IAsyncResult) =
                    let mutable result = result
                    base.Channel.EndReceivePoint(result) |> ignore
                
                [<System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>]
                member this.BeginReceivePoint  (data:System.TupleOfdoubledoubledouble, callback:System.AsyncCallback, asyncState:obj) =
                    let mutable data = data
                    let mutable callback = callback
                    let mutable asyncState = asyncState
                    ((base.Channel.BeginReceivePoint(data, callback, asyncState) :> obj) :?> System.IAsyncResult)
                
                [<System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>]
                member this.EndReceiveData  (result:System.IAsyncResult) =
                    let mutable result = result
                    base.Channel.EndReceiveData(result) |> ignore
                
                [<System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>]
                member this.BeginReceiveData  (data:System.Byte[], callback:System.AsyncCallback, asyncState:obj) =
                    let mutable data = data
                    let mutable callback = callback
                    let mutable asyncState = asyncState
                    ((base.Channel.BeginReceiveData(data, callback, asyncState) :> obj) :?> System.IAsyncResult)
            end
        end
    
    and
        
        ReceiveDataClient_ReceiveDataClientChannel = class
            inherit ChannelBase<IReceiveData> 
            new(client:System.ServiceModel.ClientBase<IReceiveData>) as this =
                {
                    inherit ChannelBase<IReceiveData>(client);
                }
            abstract EndReceivePoints : System.IAsyncResult -> unit
            default this.EndReceivePoints  (result:System.IAsyncResult) =
                let mutable result = result
                let mutable (_args:obj[]) = (Array.zeroCreate (0):obj)
                base.EndInvoke("ReceivePoints", _args, result) |> ignore
            
            abstract BeginReceivePoints : System.TupleOfdoubledoubledouble[] * System.AsyncCallback * obj -> System.IAsyncResult
            default this.BeginReceivePoints  (data:System.TupleOfdoubledoubledouble[], callback:System.AsyncCallback, asyncState:obj) =
                let mutable data = data
                let mutable callback = callback
                let mutable asyncState = asyncState
                let mutable (_args:obj[]) = (Array.zeroCreate (1):obj)
                _args.[0] <- data
                let mutable (_result:System.IAsyncResult) = base.BeginInvoke("ReceivePoints", _args, callback, asyncState)
                ((_result :> obj) :?> System.IAsyncResult)
            
            abstract EndReceivePoint : System.IAsyncResult -> unit
            default this.EndReceivePoint  (result:System.IAsyncResult) =
                let mutable result = result
                let mutable (_args:obj[]) = (Array.zeroCreate (0):obj)
                base.EndInvoke("ReceivePoint", _args, result) |> ignore
            
            abstract BeginReceivePoint : System.TupleOfdoubledoubledouble * System.AsyncCallback * obj -> System.IAsyncResult
            default this.BeginReceivePoint  (data:System.TupleOfdoubledoubledouble, callback:System.AsyncCallback, asyncState:obj) =
                let mutable data = data
                let mutable callback = callback
                let mutable asyncState = asyncState
                let mutable (_args:obj[]) = (Array.zeroCreate (1):obj)
                _args.[0] <- data
                let mutable (_result:System.IAsyncResult) = base.BeginInvoke("ReceivePoint", _args, callback, asyncState)
                ((_result :> obj) :?> System.IAsyncResult)
            
            abstract EndReceiveData : System.IAsyncResult -> unit
            default this.EndReceiveData  (result:System.IAsyncResult) =
                let mutable result = result
                let mutable (_args:obj[]) = (Array.zeroCreate (0):obj)
                base.EndInvoke("ReceiveData", _args, result) |> ignore
            
            abstract BeginReceiveData : System.Byte[] * System.AsyncCallback * obj -> System.IAsyncResult
            default this.BeginReceiveData  (data:System.Byte[], callback:System.AsyncCallback, asyncState:obj) =
                let mutable data = data
                let mutable callback = callback
                let mutable asyncState = asyncState
                let mutable (_args:obj[]) = (Array.zeroCreate (1):obj)
                _args.[0] <- data
                let mutable (_result:System.IAsyncResult) = base.BeginInvoke("ReceiveData", _args, callback, asyncState)
                ((_result :> obj) :?> System.IAsyncResult)
            interface IReceiveData with
                member this.EndReceivePoints  (result:System.IAsyncResult) =
                    let mutable result = result
                    let mutable (_args:obj[]) = (Array.zeroCreate (0):obj)
                    base.EndInvoke("ReceivePoints", _args, result) |> ignore
                
                member this.BeginReceivePoints  (data:System.TupleOfdoubledoubledouble[], callback:System.AsyncCallback, asyncState:obj) =
                    let mutable data = data
                    let mutable callback = callback
                    let mutable asyncState = asyncState
                    let mutable (_args:obj[]) = (Array.zeroCreate (1):obj)
                    _args.[0] <- data
                    let mutable (_result:System.IAsyncResult) = base.BeginInvoke("ReceivePoints", _args, callback, asyncState)
                    ((_result :> obj) :?> System.IAsyncResult)
                
                member this.EndReceivePoint  (result:System.IAsyncResult) =
                    let mutable result = result
                    let mutable (_args:obj[]) = (Array.zeroCreate (0):obj)
                    base.EndInvoke("ReceivePoint", _args, result) |> ignore
                
                member this.BeginReceivePoint  (data:System.TupleOfdoubledoubledouble, callback:System.AsyncCallback, asyncState:obj) =
                    let mutable data = data
                    let mutable callback = callback
                    let mutable asyncState = asyncState
                    let mutable (_args:obj[]) = (Array.zeroCreate (1):obj)
                    _args.[0] <- data
                    let mutable (_result:System.IAsyncResult) = base.BeginInvoke("ReceivePoint", _args, callback, asyncState)
                    ((_result :> obj) :?> System.IAsyncResult)
                
                member this.EndReceiveData  (result:System.IAsyncResult) =
                    let mutable result = result
                    let mutable (_args:obj[]) = (Array.zeroCreate (0):obj)
                    base.EndInvoke("ReceiveData", _args, result) |> ignore
                
                member this.BeginReceiveData  (data:System.Byte[], callback:System.AsyncCallback, asyncState:obj) =
                    let mutable data = data
                    let mutable callback = callback
                    let mutable asyncState = asyncState
                    let mutable (_args:obj[]) = (Array.zeroCreate (1):obj)
                    _args.[0] <- data
                    let mutable (_result:System.IAsyncResult) = base.BeginInvoke("ReceiveData", _args, callback, asyncState)
                    ((_result :> obj) :?> System.IAsyncResult)
            end
        end